// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.0
// source: hotstuff/proto/hostuff.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block      *Block  `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Qc         *QC     `protobuf:"bytes,2,opt,name=qc,proto3" json:"qc,omitempty"`
	Aggqc      *AggQC  `protobuf:"bytes,3,opt,name=aggqc,proto3,oneof" json:"aggqc,omitempty"`
	ProposalId int64   `protobuf:"varint,4,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"` // 提案的唯一标识符
	Proposer   int32   `protobuf:"varint,5,opt,name=proposer,proto3" json:"proposer,omitempty"`                       // 提案者的标识
	ViewNumber int64   `protobuf:"varint,6,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"` // 视图编号
	Signature  []byte  `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`                      // 提案的数字签名
	Timestamp  int64   `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                     // 时间戳
	MsgType    MsgType `protobuf:"varint,10,opt,name=msg_type,json=msgType,proto3,enum=pb.MsgType" json:"msg_type,omitempty"`
}

func (x *Proposal) Reset() {
	*x = Proposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotstuff_proto_hostuff_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proposal) ProtoMessage() {}

func (x *Proposal) ProtoReflect() protoreflect.Message {
	mi := &file_hotstuff_proto_hostuff_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proposal.ProtoReflect.Descriptor instead.
func (*Proposal) Descriptor() ([]byte, []int) {
	return file_hotstuff_proto_hostuff_proto_rawDescGZIP(), []int{0}
}

func (x *Proposal) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *Proposal) GetQc() *QC {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *Proposal) GetAggqc() *AggQC {
	if x != nil {
		return x.Aggqc
	}
	return nil
}

func (x *Proposal) GetProposalId() int64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *Proposal) GetProposer() int32 {
	if x != nil {
		return x.Proposer
	}
	return 0
}

func (x *Proposal) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *Proposal) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Proposal) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Proposal) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_PREPARE
}

type Precommit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MsgType    MsgType `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3,enum=pb.MsgType" json:"msg_type,omitempty"`
	ViewNumber int64   `protobuf:"varint,3,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	Qc         *QC     `protobuf:"bytes,4,opt,name=qc,proto3" json:"qc,omitempty"`
	Hash       []byte  `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`           //区块的hash
	Signature  []byte  `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"` //直接对接收到的消息的签名进行签名
}

func (x *Precommit) Reset() {
	*x = Precommit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotstuff_proto_hostuff_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Precommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Precommit) ProtoMessage() {}

func (x *Precommit) ProtoReflect() protoreflect.Message {
	mi := &file_hotstuff_proto_hostuff_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Precommit.ProtoReflect.Descriptor instead.
func (*Precommit) Descriptor() ([]byte, []int) {
	return file_hotstuff_proto_hostuff_proto_rawDescGZIP(), []int{1}
}

func (x *Precommit) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Precommit) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_PREPARE
}

func (x *Precommit) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *Precommit) GetQc() *QC {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *Precommit) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Precommit) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type CommitMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MsgType    MsgType `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3,enum=pb.MsgType" json:"msg_type,omitempty"`
	ViewNumber int64   `protobuf:"varint,3,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	Qc         *QC     `protobuf:"bytes,4,opt,name=qc,proto3" json:"qc,omitempty"`
	Hash       []byte  `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`           //区块的hash
	Signature  []byte  `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"` //直接对接收到的消息的签名进行签名
}

func (x *CommitMsg) Reset() {
	*x = CommitMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotstuff_proto_hostuff_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitMsg) ProtoMessage() {}

func (x *CommitMsg) ProtoReflect() protoreflect.Message {
	mi := &file_hotstuff_proto_hostuff_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitMsg.ProtoReflect.Descriptor instead.
func (*CommitMsg) Descriptor() ([]byte, []int) {
	return file_hotstuff_proto_hostuff_proto_rawDescGZIP(), []int{2}
}

func (x *CommitMsg) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommitMsg) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_PREPARE
}

func (x *CommitMsg) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *CommitMsg) GetQc() *QC {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *CommitMsg) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *CommitMsg) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type DecideMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MsgType    MsgType `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3,enum=pb.MsgType" json:"msg_type,omitempty"`
	ViewNumber int64   `protobuf:"varint,3,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	Qc         *QC     `protobuf:"bytes,4,opt,name=qc,proto3" json:"qc,omitempty"`
	Hash       []byte  `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`           //区块的hash
	Signature  []byte  `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"` //直接对接收到的消息的签名进行签名
}

func (x *DecideMsg) Reset() {
	*x = DecideMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotstuff_proto_hostuff_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecideMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecideMsg) ProtoMessage() {}

func (x *DecideMsg) ProtoReflect() protoreflect.Message {
	mi := &file_hotstuff_proto_hostuff_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecideMsg.ProtoReflect.Descriptor instead.
func (*DecideMsg) Descriptor() ([]byte, []int) {
	return file_hotstuff_proto_hostuff_proto_rawDescGZIP(), []int{3}
}

func (x *DecideMsg) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DecideMsg) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_PREPARE
}

func (x *DecideMsg) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *DecideMsg) GetQc() *QC {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *DecideMsg) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *DecideMsg) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type NewViewMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MsgType    MsgType `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3,enum=pb.MsgType" json:"msg_type,omitempty"`
	ViewNumber int64   `protobuf:"varint,3,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	Qc         *QC     `protobuf:"bytes,4,opt,name=qc,proto3" json:"qc,omitempty"`
	Signature  []byte  `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"` //对QC进行签名
}

func (x *NewViewMsg) Reset() {
	*x = NewViewMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotstuff_proto_hostuff_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewViewMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewViewMsg) ProtoMessage() {}

func (x *NewViewMsg) ProtoReflect() protoreflect.Message {
	mi := &file_hotstuff_proto_hostuff_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewViewMsg.ProtoReflect.Descriptor instead.
func (*NewViewMsg) Descriptor() ([]byte, []int) {
	return file_hotstuff_proto_hostuff_proto_rawDescGZIP(), []int{4}
}

func (x *NewViewMsg) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewViewMsg) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_PREPARE
}

func (x *NewViewMsg) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *NewViewMsg) GetQc() *QC {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *NewViewMsg) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type TimeoutMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MsgType    MsgType `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3,enum=pb.MsgType" json:"msg_type,omitempty"`
	ViewNumber int64   `protobuf:"varint,3,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	Qc         *QC     `protobuf:"bytes,4,opt,name=qc,proto3" json:"qc,omitempty"`
	Signature  []byte  `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"` //对QC进行签名
}

func (x *TimeoutMsg) Reset() {
	*x = TimeoutMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotstuff_proto_hostuff_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeoutMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeoutMsg) ProtoMessage() {}

func (x *TimeoutMsg) ProtoReflect() protoreflect.Message {
	mi := &file_hotstuff_proto_hostuff_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeoutMsg.ProtoReflect.Descriptor instead.
func (*TimeoutMsg) Descriptor() ([]byte, []int) {
	return file_hotstuff_proto_hostuff_proto_rawDescGZIP(), []int{5}
}

func (x *TimeoutMsg) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TimeoutMsg) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_PREPARE
}

func (x *TimeoutMsg) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *TimeoutMsg) GetQc() *QC {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *TimeoutMsg) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qc         *QC      `protobuf:"bytes,1,opt,name=qc,proto3" json:"qc,omitempty"`
	ParentHash []byte   `protobuf:"bytes,2,opt,name=ParentHash,proto3" json:"ParentHash,omitempty"`
	Hash       []byte   `protobuf:"bytes,3,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Height     int64    `protobuf:"varint,4,opt,name=Height,proto3" json:"Height,omitempty"`
	Cmd        []byte   `protobuf:"bytes,5,opt,name=cmd,proto3" json:"cmd,omitempty"`
	ViewNumber int64    `protobuf:"varint,6,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	Proposer   int32    `protobuf:"varint,7,opt,name=Proposer,proto3" json:"Proposer,omitempty"`
	Children   []string `protobuf:"bytes,8,rep,name=Children,proto3" json:"Children,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotstuff_proto_hostuff_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_hotstuff_proto_hostuff_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_hotstuff_proto_hostuff_proto_rawDescGZIP(), []int{6}
}

func (x *Block) GetQc() *QC {
	if x != nil {
		return x.Qc
	}
	return nil
}

func (x *Block) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *Block) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Block) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Block) GetCmd() []byte {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *Block) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *Block) GetProposer() int32 {
	if x != nil {
		return x.Proposer
	}
	return 0
}

func (x *Block) GetChildren() []string {
	if x != nil {
		return x.Children
	}
	return nil
}

type QC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlsSignature []byte  `protobuf:"bytes,1,opt,name=bls_signature,json=blsSignature,proto3" json:"bls_signature,omitempty"` //提案阶段是对区块的hash进行签名的聚合，后续阶段是对QC进行签名的聚合，即QC的QC
	MsgType      MsgType `protobuf:"varint,2,opt,name=msg_type,json=msgType,proto3,enum=pb.MsgType" json:"msg_type,omitempty"`
	ViewNumber   int64   `protobuf:"varint,3,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	BlockHash    []byte  `protobuf:"bytes,4,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
}

func (x *QC) Reset() {
	*x = QC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotstuff_proto_hostuff_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QC) ProtoMessage() {}

func (x *QC) ProtoReflect() protoreflect.Message {
	mi := &file_hotstuff_proto_hostuff_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QC.ProtoReflect.Descriptor instead.
func (*QC) Descriptor() ([]byte, []int) {
	return file_hotstuff_proto_hostuff_proto_rawDescGZIP(), []int{7}
}

func (x *QC) GetBlsSignature() []byte {
	if x != nil {
		return x.BlsSignature
	}
	return nil
}

func (x *QC) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_PREPARE
}

func (x *QC) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *QC) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type AggQC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qcs          []*QC   `protobuf:"bytes,1,rep,name=qcs,proto3" json:"qcs,omitempty"`
	BlsSignature []byte  `protobuf:"bytes,2,opt,name=bls_signature,json=blsSignature,proto3" json:"bls_signature,omitempty"`
	MsgType      MsgType `protobuf:"varint,3,opt,name=msg_type,json=msgType,proto3,enum=pb.MsgType" json:"msg_type,omitempty"`
	ViewNumber   int64   `protobuf:"varint,4,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	BlockHash    []byte  `protobuf:"bytes,5,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
}

func (x *AggQC) Reset() {
	*x = AggQC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotstuff_proto_hostuff_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggQC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggQC) ProtoMessage() {}

func (x *AggQC) ProtoReflect() protoreflect.Message {
	mi := &file_hotstuff_proto_hostuff_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggQC.ProtoReflect.Descriptor instead.
func (*AggQC) Descriptor() ([]byte, []int) {
	return file_hotstuff_proto_hostuff_proto_rawDescGZIP(), []int{8}
}

func (x *AggQC) GetQcs() []*QC {
	if x != nil {
		return x.Qcs
	}
	return nil
}

func (x *AggQC) GetBlsSignature() []byte {
	if x != nil {
		return x.BlsSignature
	}
	return nil
}

func (x *AggQC) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_PREPARE
}

func (x *AggQC) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *AggQC) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

type VoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalId int64   `protobuf:"varint,1,opt,name=proposal_id,json=proposalId,proto3" json:"proposal_id,omitempty"`
	ViewNumber int64   `protobuf:"varint,2,opt,name=view_number,json=viewNumber,proto3" json:"view_number,omitempty"`
	Voter      int32   `protobuf:"varint,3,opt,name=voter,proto3" json:"voter,omitempty"`
	Signature  []byte  `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"` //直接对接收到的消息的签名进行签名
	Hash       []byte  `protobuf:"bytes,5,opt,name=hash,proto3" json:"hash,omitempty"`
	MsgType    MsgType `protobuf:"varint,6,opt,name=msg_type,json=msgType,proto3,enum=pb.MsgType" json:"msg_type,omitempty"`
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hotstuff_proto_hostuff_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hotstuff_proto_hostuff_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_hotstuff_proto_hostuff_proto_rawDescGZIP(), []int{9}
}

func (x *VoteRequest) GetProposalId() int64 {
	if x != nil {
		return x.ProposalId
	}
	return 0
}

func (x *VoteRequest) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *VoteRequest) GetVoter() int32 {
	if x != nil {
		return x.Voter
	}
	return 0
}

func (x *VoteRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *VoteRequest) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *VoteRequest) GetMsgType() MsgType {
	if x != nil {
		return x.MsgType
	}
	return MsgType_PREPARE
}

var File_hotstuff_proto_hostuff_proto protoreflect.FileDescriptor

var file_hotstuff_proto_hostuff_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x68, 0x6f, 0x74, 0x73, 0x74, 0x75, 0x66, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x68, 0x6f, 0x73, 0x74, 0x75, 0x66, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1a, 0x68, 0x6f, 0x74, 0x73, 0x74, 0x75, 0x66, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x02, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x02, 0x71, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x43, 0x52, 0x02, 0x71,
	0x63, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x67, 0x67, 0x71, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x61, 0x67, 0x67, 0x51, 0x43, 0x48, 0x00, 0x52, 0x05, 0x61,
	0x67, 0x67, 0x71, 0x63, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61, 0x67,
	0x67, 0x71, 0x63, 0x22, 0xae, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x65,
	0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x02, 0x71, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x43, 0x52, 0x02,
	0x71, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d,
	0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69,
	0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x02, 0x71,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x43, 0x52,
	0x02, 0x71, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65,
	0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x02,
	0x71, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x43,
	0x52, 0x02, 0x71, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x56, 0x69,
	0x65, 0x77, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x02, 0x71, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x70, 0x62, 0x2e,
	0x51, 0x43, 0x52, 0x02, 0x71, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76,
	0x69, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x02,
	0x71, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x43,
	0x52, 0x02, 0x71, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x02,
	0x71, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x43,
	0x52, 0x02, 0x71, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x63,
	0x6d, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x90, 0x01, 0x0a, 0x02,
	0x51, 0x43, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x6c, 0x73, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x62, 0x6c, 0x73, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0xad,
	0x01, 0x0a, 0x05, 0x61, 0x67, 0x67, 0x51, 0x43, 0x12, 0x18, 0x0a, 0x03, 0x71, 0x63, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x43, 0x52, 0x03, 0x71,
	0x63, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x6c, 0x73, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x62, 0x6c, 0x73, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22, 0xbf,
	0x01, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x32, 0xe8, 0x02, 0x0a, 0x08, 0x68, 0x6f, 0x74, 0x73, 0x74, 0x75, 0x66, 0x66, 0x12, 0x2f, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2f,
	0x0a, 0x04, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x32, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x0d, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x0d, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x06, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77,
	0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x73, 0x67,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hotstuff_proto_hostuff_proto_rawDescOnce sync.Once
	file_hotstuff_proto_hostuff_proto_rawDescData = file_hotstuff_proto_hostuff_proto_rawDesc
)

func file_hotstuff_proto_hostuff_proto_rawDescGZIP() []byte {
	file_hotstuff_proto_hostuff_proto_rawDescOnce.Do(func() {
		file_hotstuff_proto_hostuff_proto_rawDescData = protoimpl.X.CompressGZIP(file_hotstuff_proto_hostuff_proto_rawDescData)
	})
	return file_hotstuff_proto_hostuff_proto_rawDescData
}

var file_hotstuff_proto_hostuff_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_hotstuff_proto_hostuff_proto_goTypes = []interface{}{
	(*Proposal)(nil),      // 0: pb.Proposal
	(*Precommit)(nil),     // 1: pb.Precommit
	(*CommitMsg)(nil),     // 2: pb.CommitMsg
	(*DecideMsg)(nil),     // 3: pb.DecideMsg
	(*NewViewMsg)(nil),    // 4: pb.NewViewMsg
	(*TimeoutMsg)(nil),    // 5: pb.TimeoutMsg
	(*Block)(nil),         // 6: pb.Block
	(*QC)(nil),            // 7: pb.QC
	(*AggQC)(nil),         // 8: pb.aggQC
	(*VoteRequest)(nil),   // 9: pb.VoteRequest
	(MsgType)(0),          // 10: pb.MsgType
	(*emptypb.Empty)(nil), // 11: google.protobuf.Empty
}
var file_hotstuff_proto_hostuff_proto_depIdxs = []int32{
	6,  // 0: pb.Proposal.block:type_name -> pb.Block
	7,  // 1: pb.Proposal.qc:type_name -> pb.QC
	8,  // 2: pb.Proposal.aggqc:type_name -> pb.aggQC
	10, // 3: pb.Proposal.msg_type:type_name -> pb.MsgType
	10, // 4: pb.Precommit.msg_type:type_name -> pb.MsgType
	7,  // 5: pb.Precommit.qc:type_name -> pb.QC
	10, // 6: pb.CommitMsg.msg_type:type_name -> pb.MsgType
	7,  // 7: pb.CommitMsg.qc:type_name -> pb.QC
	10, // 8: pb.DecideMsg.msg_type:type_name -> pb.MsgType
	7,  // 9: pb.DecideMsg.qc:type_name -> pb.QC
	10, // 10: pb.NewViewMsg.msg_type:type_name -> pb.MsgType
	7,  // 11: pb.NewViewMsg.qc:type_name -> pb.QC
	10, // 12: pb.TimeoutMsg.msg_type:type_name -> pb.MsgType
	7,  // 13: pb.TimeoutMsg.qc:type_name -> pb.QC
	7,  // 14: pb.Block.qc:type_name -> pb.QC
	10, // 15: pb.QC.msg_type:type_name -> pb.MsgType
	7,  // 16: pb.aggQC.qcs:type_name -> pb.QC
	10, // 17: pb.aggQC.msg_type:type_name -> pb.MsgType
	10, // 18: pb.VoteRequest.msg_type:type_name -> pb.MsgType
	0,  // 19: pb.hotstuff.Propose:input_type -> pb.Proposal
	9,  // 20: pb.hotstuff.Vote:input_type -> pb.VoteRequest
	1,  // 21: pb.hotstuff.PreCommit:input_type -> pb.Precommit
	2,  // 22: pb.hotstuff.Commit:input_type -> pb.CommitMsg
	3,  // 23: pb.hotstuff.Decide:input_type -> pb.DecideMsg
	4,  // 24: pb.hotstuff.NewView:input_type -> pb.NewViewMsg
	5,  // 25: pb.hotstuff.Timeout:input_type -> pb.TimeoutMsg
	11, // 26: pb.hotstuff.Propose:output_type -> google.protobuf.Empty
	11, // 27: pb.hotstuff.Vote:output_type -> google.protobuf.Empty
	11, // 28: pb.hotstuff.PreCommit:output_type -> google.protobuf.Empty
	11, // 29: pb.hotstuff.Commit:output_type -> google.protobuf.Empty
	11, // 30: pb.hotstuff.Decide:output_type -> google.protobuf.Empty
	11, // 31: pb.hotstuff.NewView:output_type -> google.protobuf.Empty
	11, // 32: pb.hotstuff.Timeout:output_type -> google.protobuf.Empty
	26, // [26:33] is the sub-list for method output_type
	19, // [19:26] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_hotstuff_proto_hostuff_proto_init() }
func file_hotstuff_proto_hostuff_proto_init() {
	if File_hotstuff_proto_hostuff_proto != nil {
		return
	}
	file_hotstuff_proto_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hotstuff_proto_hostuff_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotstuff_proto_hostuff_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Precommit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotstuff_proto_hostuff_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotstuff_proto_hostuff_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecideMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotstuff_proto_hostuff_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewViewMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotstuff_proto_hostuff_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeoutMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotstuff_proto_hostuff_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotstuff_proto_hostuff_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotstuff_proto_hostuff_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggQC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hotstuff_proto_hostuff_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_hotstuff_proto_hostuff_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hotstuff_proto_hostuff_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hotstuff_proto_hostuff_proto_goTypes,
		DependencyIndexes: file_hotstuff_proto_hostuff_proto_depIdxs,
		MessageInfos:      file_hotstuff_proto_hostuff_proto_msgTypes,
	}.Build()
	File_hotstuff_proto_hostuff_proto = out.File
	file_hotstuff_proto_hostuff_proto_rawDesc = nil
	file_hotstuff_proto_hostuff_proto_goTypes = nil
	file_hotstuff_proto_hostuff_proto_depIdxs = nil
}
